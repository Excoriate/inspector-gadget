name: 🦀 Rust CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build-and-test:
    name: 🏗️ Build and Test
    runs-on: ubuntu-latest
    steps:
    - name: 📥 Checkout repository
      uses: actions/checkout@v4

    - name: 🛠️ Setup Rust toolchain
      uses: actions-rust-lang/setup-rust-toolchain@v1
      with:
        components: rustfmt, clippy

    - name: 📦 Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libxcb-shape0-dev libxcb-xfixes0-dev
      
    - name: 🔨 Build project
      run: cargo build --verbose
      
    - name: 🧪 Run tests
      run: cargo test --verbose
      
    - name: 🔍 Run Clippy
      run: cargo clippy -- -D warnings
      
    - name: 💅 Check formatting
      run: cargo fmt -- --check

    - name: 🎉 CI Success Notification
      if: success()
      run: |
        echo "::notice::✅ CI checks passed successfully!"

    - name: ❌ CI Failure Notification
      if: failure()
      run: |
        echo "::error::💥 CI checks failed. Please review the logs for details."

  publish:
    name: 📢 Publish to crates.io
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
    - name: 📥 Checkout repository
      uses: actions/checkout@v4

    - name: 🛠️ Setup Rust toolchain
      uses: actions-rust-lang/setup-rust-toolchain@v1

    - name: 🔑 Login to crates.io
      uses: actions-rs/cargo@v1
      with:
        command: login
        args: ${{ secrets.CARGO_REGISTRY_TOKEN }}

    - name: 🚀 Publish to crates.io
      uses: actions-rs/cargo@v1
      with:
        command: publish

    - name: 🎉 Publish Success Notification
      if: success()
      run: |
        echo "::notice::🎊 Successfully published to crates.io!"

    - name: ❌ Publish Failure Notification
      if: failure()
      run: |
        echo "::error::💥 Failed to publish to crates.io. Please check the logs for details."