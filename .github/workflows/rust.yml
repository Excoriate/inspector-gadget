name: 🦀 Rust CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  compile:
    name: 🔨 Compile
    runs-on: ubuntu-latest
    steps:
    - name: 📥 Checkout repository
      uses: actions/checkout@v4

    - name: 🛠️ Setup Rust toolchain
      uses: actions-rust-lang/setup-rust-toolchain@v1

    - name: 📦 Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libxcb-shape0-dev libxcb-xfixes0-dev
      
    - name: 🔨 Compile project
      run: cargo build --verbose

    - name: 🎉 Compile Success Notification
      if: success()
      run: echo "::notice::✅ Project compiled successfully!"

    - name: ❌ Compile Failure Notification
      if: failure()
      run: echo "::error::💥 Project compilation failed. Please review the logs for details."

  static_checks:
    name: 🔍 Static Checks
    needs: compile
    runs-on: ubuntu-latest
    steps:
    - name: 📥 Checkout repository
      uses: actions/checkout@v4

    - name: 🛠️ Setup Rust toolchain
      uses: actions-rust-lang/setup-rust-toolchain@v1
      with:
        components: rustfmt, clippy

    - name: 💅 Check formatting
      run: cargo fmt -- --check

    - name: 🔍 Run Clippy
      run: cargo clippy -- -D warnings

    - name: 🎉 Static Checks Success Notification
      if: success()
      run: echo "::notice::✅ Static checks passed successfully!"

    - name: ❌ Static Checks Failure Notification
      if: failure()
      run: echo "::error::💥 Static checks failed. Please review the logs for details."

  test:
    name: 🧪 Test
    needs: static_checks
    runs-on: ubuntu-latest
    steps:
    - name: 📥 Checkout repository
      uses: actions/checkout@v4

    - name: 🛠️ Setup Rust toolchain
      uses: actions-rust-lang/setup-rust-toolchain@v1

    - name: 📦 Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libxcb-shape0-dev libxcb-xfixes0-dev

    - name: 🧪 Run unit tests
      run: cargo test --verbose

    - name: 🧪 Run functional tests
      run: |
        if [ -f justfile ]; then
          curl --proto '=https' --tlsv1.2 -sSf https://just.systems/install.sh | bash -s -- --to ~/.local/bin
          ~/.local/bin/just ci
        else
          echo "No justfile found, skipping functional tests"
        fi

    - name: 🎉 Test Success Notification
      if: success()
      run: echo "::notice::✅ All tests passed successfully!"

    - name: ❌ Test Failure Notification
      if: failure()
      run: echo "::error::💥 Tests failed. Please review the logs for details."